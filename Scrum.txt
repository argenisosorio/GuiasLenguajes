===================
Guía de Scrum by dM
===================

¿Qué es scrum?
==============

Scrum es un marco de gestión de proyectos ágil que ayuda a los equipos a
estructurar y gestionar su trabajo a través de un conjunto de valores,
principios y prácticas. Al igual que un equipo de rugby (de donde recibe su
nombre) que se entrena para el gran partido, el scrum anima a los equipos a
aprender a través de las experiencias, a organizarse mientras trabajan en un
problema y a reflexionar sobre sus victorias y derrotas para mejorar
continuamente.

Si bien el scrum del que se hablará lo utilizan con más frecuencia los equipos
de desarrollo de software, sus principios y lecciones se pueden aplicar a todo
tipo de trabajo en equipo. Esta es una de las razones por las que el scrum es
tan popular. Considerado a menudo como un marco ágil de gestión de proyectos,
scrum describe un conjunto de reuniones, herramientas y funciones que funcionan
en conjunto para ayudar a los equipos a estructurar y gestionar su trabajo.

¿De qué se trata?
=================

La metodología Scrum se basa en “sprints” cortos que se usan para crear un ciclo
de proyecto. Estos ciclos duran de una a dos semanas y se organizan con equipos
de hasta 10 personas. Este enfoque es diferente al modelo de cascada, donde las
tareas individuales se dividen y relacionan por dependencias.

La metodología Scrum es única por varias razones, una de las cuales es la
intervención de un Scrum Master que es un gerente de proyectos que dirige las
reuniones diarias de Scrum, las demostraciones, los sprints y los análisis
retrospectivos de sprints. Estas reuniones tienen como objetivo conectar a todos
los participantes del proyecto y garantizar que las tareas se finalicen a
tiempo.

Si bien Scrum es una metodología de gestión de proyectos en sí misma, suele
asociarse mucho con un marco ágil. Esto se debe a que presentan principios
similares, como la valoración de las personas y la colaboración de los equipos
por encima de los procesos.

Recomendado para: Los equipos que usen un enfoque ágil también deberían usar, o
al menos probar, la metodología Scrum. Dado que los sprints se dividen en
equipos pequeños, este enfoque puede ser adecuado tanto para equipos pequeños
como grandes.

Metodología ágil frente a scrum
===============================

La metodología ágil es un enfoque general para la gestión de proyectos que
promueve la flexibilidad, la colaboración constante con el cliente, y la entrega
continua de productos funcionales. Se basa en los principios del Manifiesto
Ágil, que enfatiza responder a cambios, entregar software de forma rápida y
trabajar de manera colaborativa.

Scrum, por otro lado, es un marco de trabajo ágil específico que implementa esos
principios ágiles. Es una metodología ágil en sí misma, pero con roles, eventos
y artefactos específicos, como el Scrum Master, los Sprints (ciclos de trabajo
cortos), y los product backlogs (lista de tareas pendientes).

En resumen, Scrum es una forma de implementar la metodología ágil, pero la
metodología ágil es un concepto más amplio que incluye varios enfoques, como
Scrum, Kanban, Lean, entre otros.

La diferencia entre la metodología ágil y la definición de "scrum" se encuentra
en la guía de scrum y en el Manifiesto ágil. El Manifiesto ágil describe cuatro
valores:

-Personas e interacciones por encima de los procesos y las herramientas.

-Software de trabajo por encima de la documentación exhaustiva.

-.Colaboración con los clientes por encima de la negociación de contratos.

-Responder al cambio en lugar de seguir un plan.

La definición de scrum se basa en el empirismo y el pensamiento ágil. El
empirismo sostiene que el conocimiento proviene de la experiencia y que las
decisiones se toman en función de lo observado. El pensamiento lean reduce el
despilfarro y se centra en lo esencial. El marco de scrum es heurístico: se basa
en el aprendizaje continuo y en el ajuste a los factores fluctuantes. Reconoce
que el equipo no lo sabe todo al principio de un proyecto y que evolucionará a
lo largo de la experiencia. El scrum está estructurado para ayudar a los equipos
a adaptarse de forma natural a las condiciones y los requisitos de los usuarios
cambiantes, con el cambio de prioridades integrado en el proceso y ciclos de
lanzamiento cortos para que tu equipo pueda aprender y mejorar constantemente.

Aunque scrum está estructurado, no es del todo rígido. Su ejecución se puede
adaptar a las necesidades de cualquier organización. Existen muchas teorías
acerca de cómo deben trabajar los equipos de scrum exactamente para tener éxito.
Sin embargo, después de más de una década ayudando a los equipos ágiles a
realizar el trabajo en Atlassian, hemos aprendido que la comunicación clara, la
transparencia y la dedicación a la mejora continua siempre deben ser el núcleo
del marco de trabajo que elijas. Y el resto depende de ti.

Documento oficial
=================

La guía de metodología scrum se puede descargar desde > https://scrumguides.org/

El marco de scrum
=================

El marco de scrum está formado por un conjunto de valores, principios y
prácticas que los equipos de scrum siguen para desarrollar un producto o
servicio. Detalla los miembros de un equipo de scrum y sus responsabilidades,
los "artefactos" que definen el producto y el trabajo que hay que hacer para
crear el producto, así como las ceremonias de scrum que guían al equipo de scrum
en su trabajo.

Miembros de un equipo de scrum
==============================

Un equipo de scrum es un equipo pequeño y ágil que se dedica a ofrecer
incrementos de productos de forma comprometida. El tamaño de un equipo de scrum
suele ser reducido, de unas 10 personas, pero es lo suficientemente grande como
para llevar a cabo una cantidad considerable de trabajo en un sprint. El equipo
de scrum debe componerse de tres roles específicos: el propietario del producto,
el experto en scrum y el equipo de desarrollo.Y, puesto que los equipos de scrum
son interdisciplinares, el equipo de desarrollo está formado por evaluadores,
diseñadores, especialistas en experiencia de usuario e ingenieros de operaciones
además de desarrolladores.

El propietario del producto de scrum
====================================

Los propietarios son los referentes de sus productos. Se centran en entender los
requisitos empresariales, de los clientes y del mercado y, en consecuencia, en
priorizar el trabajo que debe realizar el equipo de ingeniería. Propietarios
efectivos de los productos

-Crean y gestionan el backlog del producto.

-Colabora estrechamente con la empresa y el equipo para garantizar que todo el
mundo entiende los elementos de trabajo del backlog del producto.

-Orienta al equipo claramente sobre qué funciones ofrecer a continuación.

-Decide cuándo lanzar el producto con una predisposición a una entrega más
frecuente.

El propietario del producto no siempre es el gestor del producto. Los
propietarios de los productos se centran en garantizar que el equipo de
desarrollo ofrece el máximo valor a la empresa. Además, es importante que el
propietario del producto sea una sola persona. Ningún equipo de desarrollo
quiere una orientación contradictoria por parte de varios propietarios de
productos.

=========================
Backlog o product backlog
=========================

La creación de productos comienza con una idea, pero para crear algo especial
hace falta contar con un equipo que trabaje con dedicación para poner esa idea
en práctica. Sí, hasta los iPhone fueron un prototipo alguna vez, hasta que se
abrieron camino y alcanzaron la popularidad que tienen gracias a que los
desarrolló el equipo correcto. Cuando gestionas un equipo de desarrolladores con
Scrum, mantener la organización es crucial para el éxito de los productos.

Entonces, ¿qué pueden hacer los equipos de Desarrollo para mantenerse
organizados y cumplir con los objetivos?: Listas de trabajos pendientes.

El trabajo pendiente del producto o product backlog es, en esencia, una lista de
tareas pendientes específicas. Si el equipo aplica una metodología ágil y tiene
en cuenta los principios del Agile Manifesto, el product backlog servirá para
dividir proyectos y determinar cuáles son las tareas más importantes. Esta
definición puede cambiar algo cuando estamos trabajando con marcos ágiles a gran
escala.

¿Qué es un product backlog?
===========================

Llamamos product backlog a una lista de funciones y elementos, ordenados según
las prioridades, que son necesarios para cumplir con los objetivos y las
expectativas del proyecto. La regla general es desarrollar uno de estos
conjuntos de trabajo pendiente del producto para cada producto y asignarle a un
equipo ese trabajo pendiente en particular.

A veces, hay muchos conjuntos de product backlogs y varios equipos que trabajan
en un solo producto más amplio. Tomemos el ejemplo de Adobe Creative Cloud.
Adobe Creative Cloud es un producto que abarca a muchos otros de menor tamaño
como Photoshop, Illustrator y After Effects. Cada uno de estos productos no tan
grandes tendrían su propio product backlog y diferentes equipos designados para
su desarrollo.

Los equipos que trabajan con metodologías ágiles dedican tiempo a crear
productos y a hacer ajustes a medida que los proyectos avanzan. Dada la
naturaleza de las metodologías ágiles, sabemos que las tareas del product
backlog no son definitivas e inamovibles y que no todos los elementos se podrán
finalizar. El equipo de Desarrollo deberá readaptar el trabajo pendiente del
producto a medida que se prioricen las tareas necesarias.

¿Qué incluye el product backlog?
================================

Por lo general, en el product backlog se incluyen las funciones, la reparación
de errores, la deuda técnica y la adquisición del conocimiento. Estos elementos
del trabajo pendiente del producto son los product backlogs items, elementos
clave para poder realizar el product backlog.

1. Funciones (historias de los usuarios)

Cuando hablamos de función, también conocida como historia del usuario, en Scrum
nos referimos a la función del producto que le resulta valiosa al usuario de ese
producto. Estas funciones pueden ser complejas (en muchos casos, épicas) o
pueden ser muy simples. Puede resultar útil elaborar un mapa de historias para
que el equipo determine qué es lo que más necesita el usuario.

2. Reparación de errores

Las reparaciones de errores se explican por sí solas. El equipo que trabaja con
Scrum debería ocuparse rápido de ellas para sostener la integridad del producto.
Algunos errores pueden ser lo suficientemente importantes como para interrumpir
el sprint en que se encuentra trabajando el equipo, mientras que otros pueden
esperar hasta el siguiente sprint. Sin embargo, hay una regla general sobre los
errores que indica que hay que tenerlos siempre al comienzo de la lista de
trabajo pendiente del producto para que el equipo no los olvide.

3. Deuda técnica

Al igual que con las deudas financieras, cuando no se resuelve la deuda técnica,
esta “acumula intereses”. Cuando los desarrolladores dejan trabajos técnicos al
final de la lista de trabajo pendiente del producto, esos trabajos se acumulan y
cada vez es más difícil cumplirlos. El equipo puede evitar la acumulación de la
deuda técnica si se organiza y se ocupa de los trabajos técnicos de menor tamaño
de manera progresiva y a diario.

4. Adquisición del conocimiento

La adquisición del conocimiento consiste en reunir información para cumplir con
otras tareas del product backlog más adelante. Si el equipo tiene una función
con la que no puede cumplir en caso de no reunir más información, entonces
podrías crear una tarea para adquisición de conocimientos; algo como crear un
prototipo, hacer un experimento o intentar con una prueba conceptual para
obtener la información necesaria para el desarrollo de la función.

¿Cómo se hace un product backlog?
=================================

El concepto de "trabajo pendiente del producto" o pila de producto abarca más
que una simple lista de pendientes. Puedes dividir tareas complejas en series de
pasos y delegarlas a los miembros del equipo Scrum según corresponda. A
continuación, compartimos los pasos para desarrollar con efectividad el trabajo
pendiente del producto.

1. Crea una hoja de ruta del producto

La hoja de ruta del producto es el pilar del trabajo pendiente del producto. El
equipo debe crear una hoja de ruta antes de preparar el product backlog porque
la hoja de ruta es un plan de acción sobre cómo cambiará el producto a medida
que se desarrolle. La hoja de ruta es la visión de largo plazo sobre el
desarrollo del producto y también puede evolucionar.

2. Haz un listado con los elementos del product backlog

Con la hoja de ruta del producto en mente, el equipo puede empezar a enumerar
los elementos del product backlog. Estos elementos pueden incluir acciones de
prioridad alta o ideas más abstractas. Durante esta fase de la preparación del
product backlog, también necesitarás comunicarte con todos los involucrados y
escuchar las ideas de mejora para el producto que tengan para aportar. Con una
plantilla de product backlog puede resultar mucho más fácil crear columnas de
tareas y después moverlas para reordenarlas.

3. Establece las prioridades

Después de que el equipo haya elaborado la lista de elementos o ítems del
product backlog habrá que ordenarla y priorizar las tareas que son más
importantes. Para identificar los elementos prioritarios piensa primero en los
clientes y analiza cuáles son los que les aportarán más valor.

4. Actualiza todo con regularidad

Mientras el equipo avance con el product backlog recuerda que ese trabajo
pendiente debe ser un documento vivo. Puedes agregar elementos continuamente y
definir las prioridades una y otra vez, o readaptarlos a medida que se ocupen de
cada uno de ellos.

Cómo priorizar los elementos del product backlog
================================================

Un componente esencial de la gestión del trabajo pendiente de un producto es
determinar las prioridades de las tareas. Si eres el Scrum master deberías
comprender profundamente qué funciones nuevas son las que pretenden ver en el
producto los demás participantes involucrados en este trabajo. A continuación,
compartimos algunas estrategias sobre cómo establecer las prioridades en una
lista de elementos del product backlog.

-Organiza las tareas por urgencia y por importancia: Cuando te centres en la
readaptación del trabajo pendiente, prueba con organizar las tareas según la
urgencia y la importancia. El equipo debe priorizar aquellos elementos del
product backlog que mejoren las funcionalidades del producto y también la
experiencia de los usuarios.

-Ocúpate primero de las tareas complejas: El equipo se puede sentir inclinado a
finalizar primero las tareas más simples para poder quitarlas del product
backlog y acortar la lista, pero en realidad es una forma poco eficiente de
gestionar los proyectos. El trabajo pendiente del producto seguirá creciendo, de
modo que ocuparse primero de las tareas más complejas puede resultar más
efectivo para el desarrollo del producto.

-Finaliza las tareas en sprints específicos: Los equipos ágiles trabajan en
sprints temporales específicos para finalizar los trabajos. Este método es muy
efectivo para la productividad. Al final de cada sprint, el encargado del
producto y cualquier otra persona que participe en el desarrollo podrá asistir a
una revisión del sprint contigo y el equipo de Desarrollo para garantizar que
todo esté encaminado. Las tareas que forman parte de cada sprint forman parte
del sprint backlog.

Comunícate con el equipo: La comunicación entre los miembros del equipo es
crucial para el proceso de priorización del product backlog Para ordenar
correctamente el trabajo pendiente y finalizar los elementos en un plazo
razonable, tienes que trabajar junto con tu equipo y seguir la guía de Scrum.

Ejemplo de product backlog
==========================

Los trabajos pendientes de productos pueden ser diferentes según el proyecto,
incluso algunos comienzan con una épica. Una épica es un problema global que
pretendes resolver para un cliente. A continuación, compartimos un ejemplo:

Épica: Como gerente de Marketing, quiero un sistema que me permita entregar
contenido de calidad a mis lectores.

Esta épica podría tener como resultado varias funciones que abarquen desde cómo
genera contenido un usuario en el sistema nuevo a cómo lo edita y lo comparte
con otros equipos. Para continuar con nuestro ejemplo de trabajo pendiente del
producto, podemos dividir la épica en historias de usuarios más específicas.

Historia 1: Como creador de contenido, quiero un sistema de gestión de
contenidos que me permita crear contenido para poder informar a los clientes
sobre nuestros productos.

Historia 2: Como editor, quiero un sistema de gestión de contenidos que me
permita revisar el contenido antes de publicarlo para poder garantizar que esté
bien escrito y optimizarlo para las búsquedas.

El product owner, el Scrum master y el equipo de Desarrollo determinarán las
funciones que debería incluir el producto a partir de las historias de los
usuarios y establecerán las prioridades según la importancia de cada historia.

Funciones que debería incluir el producto según la historia 1:

-Iniciar sesión (en el sistema de gestión de contenidos)
-Crear contenido
-Editar una página de contenido
-Guardar cambios
-Asignar contenido a un editor para su revisión

Como product owner, usarás la épica como orientación para la hoja de ruta del
producto y para los elementos de la lista de trabajo pendiente. Como puedes ver
en este ejemplo, una épica puede dividirse en muchas historias de usuarios y
funciones del producto.

Resumen:

Es el trabajo pendiente de un producto o más conocido por su término en inglés,
product backlog, es una lista ordenada de todas las tareas que se harán para el
desarrollo de un producto, cuando utilizas la metodología Scrum. que después se
subdivide en backlogs o sprint backlogs, funciones o elementos que hay que
finalizar y que, además, forman parte de una hoja de ruta más amplia.

Gestión y preparación del backlog
=================================

Un backlog del producto es una lista de tareas asignadas al equipo de desarrollo
que se basan en la hoja de ruta del producto y sus requisitos. En este caso, el
equipo de desarrollo escoge una tarea del backlog del producto para llevarla a
cabo en cada sprint.

La preparación y el mantenimiento del backlog sirve de ayuda a los equipos para
alcanzar sus objetivos a largo plazo al incorporar y quitar los elementos en
función de la capacidad de trabajo a largo plazo y al cambiar los objetivos del
negocio. Jira permite a los equipos preparar backlogs de gran tamaño
clasificando y seleccionando varios elementos, además de ordenar las historias
de usuario y los errores arrastrando y soltando las incidencias.

Metodología Scrumban
====================

Como puedes imaginar, Scrumban es una metodología que se inspira en los procesos
Scrum y Kanban. Algunos lo consideran un enfoque híbrido que combina lo mejor de
ambos métodos.

Scrumban usa un ciclo de sprint similar al de la metodología Scrum, pero también
permite que se agreguen tareas individuales al plan, como el método Kanban. Esto
permite que los planes de proyectos mantengan una estructura simple y clara, y
que además se pueda finalizar el trabajo más importante. Scrumban también
organiza reuniones de Scrum para fortalecer la colaboración y mantener a los
objetivos siempre presentes.

Recomendado para: Si te gusta la idea de dividir un proyecto en tareas más
pequeñas, pero también deseas mantenerlo visualmente simple, Scrumban es ideal
para ti. Es la combinación perfecta entre simplicidad y claridad.

Waterfall vs Kanban vs Agile vs Scrum
=====================================

Waterfall: El modelo de cascada o Waterfall divide cada proyecto en diferentes
fases y estas se completan en orden secuencial.

Agile: La metodología ágil o Agile es una metodología iterativa que divide los
proyectos en varias fases dinámicas conocidas como "sprints".

Kanban: Kanban es una estrategia visual de gestión de proyectos que muestra el
trabajo en una vista tipo tablero.

Scrum: Scrum es un m~rco ágil que ayuda a los equipos a colaborar y realizar un
trabajo de alto impacto.

Marco ágil de gestión de proyectos Scrum
========================================

Scrumes un marco para la gestión ágil de proyectos que utiliza iteraciones de
trabajo de duración fija, denominadas sprints. Hay cuatro ceremonias que dan
estructura a cada sprint.

Todo empieza con el trabajo atrasado o la cantidad de trabajo que hay que hacer.
En Scrum, hay dos atrasos: uno es la cartera de productos (propiedad del
propietario del producto), que es una lista priorizada de funciones, y la otra
es la cartera de sprints, que se cubre tomando los números de la parte superior
de la cartera de productos hasta que se alcance la capacidad para el siguiente
sprint. Los equipos de scrum tienen funciones únicas y específicas según su
participación en el proceso. Por lo general, hay un maestro de scrum, o un
campeón del método scrum para el equipo; el propietario del producto, que es la
voz del producto; y el equipo de scrum, que suelen ser miembros de un equipo
multifuncional.

Las cuatro ceremonias de scrum
==============================

-Sprint Planning: Una reunión de planificación del equipo que determina qué
completar en el próximo sprint.

-Sprint Demo: Una reunión para compartir en la que el equipo muestre lo que ha
publicado en ese sprint.

-Daily Standup: También conocida como monólogo, una minirreunión de 15 minutos
para que el equipo de software la sincronice.

-Retrospectiva: Una reseña de lo que salió bien y lo que no con las acciones
para que el siguiente sprint fuera mejor.

Tableros de scrum
=================

Los tableros de scrum se utilizan para ver todo el trabajo de un sprint
determinado. Durante la reunión de planificación del sprint, el equipo pasa las
tareas del backlog del producto al backlog de sprint. Los tableros de scrum
pueden tener diferentes fases que se pueden ver en el flujo de trabajo, entre
las que se incluyen Pendiente, En curso y Finalizado. Los tableros de scrum son
la pieza clave para mejorar la transparencia en la gestión ágil de proyectos.

=================
Tutorial de scrum
=================

En este tutorial, ofrecemos instrucciones paso a paso sobre cómo dirigir un
proyecto basado en scrum, priorizar y organizar tu backlog mediante sprints
entre otras muchas más cosas.

Paso 1: Crea un proyecto de scrum
=================================

Una vez que hayas creado el proyecto, entrarás en el backlog vacío. El backlog
también se conoce como el backlog del producto y contiene una lista continua de
los elementos de trabajo potenciales de tu equipo en relación con el proyecto.

Paso 2: Crear historias de usuario o tareas en el backlog
=========================================================

En Jira, llamamos "incidencias" a los elementos de trabajo, como las historias
de usuario, las tareas y los errores. Crea algunas historias de usuario con la
opción de creación rápida en el backlog. Si no tienes ninguna historia de
usuario en mente, simplemente crea historias de usuario de ejemplo para empezar
y ver cómo funciona.

¿Qué son las historias de usuario?

Las historias de usuario se utilizan para describir elementos de trabajo en un
lenguaje no técnico y desde la perspectiva de un usuario. Como {tipo de usuario}
, quiero {objetivo} para {obtener beneficio}.

Vamos a utilizar una página web como ejemplo sencillo para crear una historia de
usuario.

-Como cliente, deseo crear una cuenta para que pueda ver mis compras anteriores.

El propietario del producto suele esbozar y priorizar las historias de usuario y
después el equipo de desarrollo determina las tareas detalladas que son
necesarias para completar la historia en un próximo sprint. El equipo de
desarrollo también es responsable de estimar el esfuerzo relativo necesario para
completar la historia.

Una vez que hayas creado unas cuantas historias de usuario, puedes empezar a
priorizarlas en el backlog. En Jira, puedes clasificar o priorizar tus historias
arrastrándolas y soltándolas en el orden en que quieres que se vayan sacando
adelante.

Estas son solo las primeras historias de tu proyecto. Seguirás creando historias
mientras dure el proyecto. Esto responde a que la metodología ágil implica un
aprendizaje y una adaptación continuos.

Paso 3: Crear un sprint
=======================

Crea tu primer sprint en el backlog para que puedas empezar a planificar el
sprint.

¿Qué es un sprint?
==================

En scrum, los equipos realizan pronósticos para completar una serie de historias
de usuario u otros elementos de trabajo durante un periodo fijo conocido como
sprint. En términos generales, los sprints duran una, dos o cuatro semanas.
Corresponde al equipo determinar la longitud de los sprints. Nosotros
recomendamos empezar con dos semanas. Es el tiempo suficiente para conseguir
algo, pero no tanto como para que el equipo no reciba feedback de forma
periódica. Cuando se determina la cadencia de un sprint, el equipo trabaja
constantemente en esa cadencia. Los sprints de longitud fija refuerzan las
habilidades de estimación y predicen la futura velocidad del equipo a medida que
este trabaja en las tareas del backlog.

Paso 4: Organizar la reunión de planificación de sprints
========================================================

Al principio de cada sprint, deberías celebrar una reunión con el resto del
equipo para planificar el sprint. La reunión de planificación del sprint es una
ceremonia en la que se sientan las bases del equipo para que el sprint resulte
un éxito. En esta reunión, todo el equipo debate el objetivo del sprint y las
historias del backlog del producto priorizado. El equipo de desarrollo crea
tareas detalladas y estimaciones de las historias de alta prioridad. El equipo
de desarrollo se compromete a completar un determinado número de historias
durante el sprint. Estas historias y el plan para completarlas se convierte en
lo que se conoce como el backlog del sprint.

Añade estimaciones de puntos de historia añadiendo un número al campo Estimación
de puntos de historia.

Cuando estés preparado, arrastra las historias acordadas en la reunión de
planificación del sprint al sprint que acabas de crear. Este es tu backlog del
sprint.

¿En qué consiste la reunión de planificación de sprints?

-Asistentes: se necesita equipo de desarrollo, experto en scrum y propietario del producto.

-Cuándo: Al empezar un sprint.

-Duración: normalmente, dos horas por semana de iteración. Por ejemplo, un
sprint de dos semanas se inicia con una reunión de planificación de cuatro
horas. La reunión termina cuando se ha alcanzado su propósito.

-Propósito: planificar el trabajo del sprint. El equipo acuerda el objetivo del
sprint y el backlog del sprint.

¿Qué es el objetivo del sprint?

Al crear un sprint, el propietario del producto suele identificar un objetivo
del sprint. Esto ofrece un tema para que se complete el trabajo en el sprint.
El objetivo del sprint también ofrece flexibilidad en cuanto al número de
historias que se completan en un sprint. Un sprint se considera un éxito si se
consigue el objetivo del sprint.

¿Qué es la estimación ágil?

Los equipos de software tradicionales dan estimaciones en un formato de tiempo:
días, semanas, meses. Sin embargo, muchos equipos que han adoptado la
metodología ágil pasan a utilizar los puntos de historia. Los puntos de historia
valoran el esfuerzo relativo del trabajo, a menudo en un formato similar a la
secuencia de Fibonacci: 0, 0,5, 1, 2, 3, 5, 8, 13, 20, 40, 100.

Las estimaciones te permiten medir la cantidad de trabajo que deberás añadir al
siguiente sprint basándote en el número de componentes de tu equipo. Tras unos
sprints, tu equipo sabrá con más certeza la cantidad de trabajo que puede asumir
durante el sprint, lo que evitará comprometerse a hacer más trabajo del que se
puede asumir.

Paso 5: Iniciar el sprint en Jira
=================================

Asigna un nombre al sprint. Algunos equipos asignan el nombre al sprint en
función de su objetivo. En caso de que coincidan los nombres de varias
incidencias en el sprint, asigna un nombre al sprint en torno a ese tema.
También puedes asignar al sprint el nombre que quieras.

Añade una duración del sprint y las fechas de inicio y de finalización. Las
fechas de inicio y de finalización deberían adaptarse a la planificación del
equipo. Por ejemplo, algunos equipos inician los sprints el lunes y los
finalizan el viernes de la siguiente semana, por la mañana . Otros equipos
deciden iniciar y finalizar sus sprints a mediados de semana. Depende de ti. Si
no estás seguro de cuál debería ser la duración de los sprints, te recomendamos
probar con dos semanas.

Añade el objetivo del sprint tal y como se haya acordado en la reunión de
planificación del sprint.

Una vez iniciado el sprint, se te dirigirá a la pestaña Active sprints (Sprints
activos) del proyecto.

Paso 6: Organizar las reuniones rápidas diarias
===============================================

Tras iniciar el sprint, el equipo se debe reunir a diario, normalmente por la
mañana, para revisar las tareas que realiza cada uno. El objetivo de esta
reunión es comprobar si alguien del equipo está experimentado bloqueos que le
impiden realizar las tareas del sprint.

¿En qué consisten las reuniones rápidas diarias?

-Asistentes (principalmente): el equipo de desarrollo

-Cuándo: Una vez al día, normalmente por la mañana.

-Duración: 15 minutos como máximo. No reserves ninguna sala de conferencias ni
celebres la reunión sentados. ¡Estar de pie hace que la reunión dure menos!

-Objetivo: las reuniones rápidas diarias están pensadas para informar en poco
tiempo a todos de lo que sucede en el equipo y para planificar el trabajo del
día. No se trata de reuniones de balance en detalle. El tono debe ser ligero y
divertido, pero informativo. Haz que los miembros del equipo respondan las
preguntas siguientes:

¿Qué terminé ayer?

¿En qué voy a trabajar hoy?

¿Estoy bloqueado con algo?

Informar del trabajo que se terminó el día anterior delante de los compañeros
lleva implícita una responsabilidad. Nadie quiere ser el miembro del equipo que
siempre está haciendo lo mismo y no avanza.

Consejo de experto: Algunos equipos se sirven de temporizadores para que todos
sigan el rumbo previsto. Otros lanzan pelotas al equipo para asegurarse de que
presten atención. Muchos equipos distribuidos utilizan las videoconferencias o
los chats de grupo para acortar distancias. Tu equipo es único. ¡Tus reuniones
rápidas también deben serlo!

Puedes utilizar los sprints activos del tablero de scrum durante la reunión
rápida diaria para que cada miembro del equipo pueda ver las tareas en las que
está trabajando.

Paso 7: Consultar el diagrama de trabajo pendiente
==================================================

Es buena idea consultar el diagrama de trabajo pendiente durante un sprint. En
Jira, el diagrama de trabajo pendiente muestra la cantidad estimada y la
cantidad real de trabajo que se debe realizar en un sprint. El diagrama de
trabajo pendiente se actualiza automáticamente en Jira conforme completas las
tareas. Para ver este diagrama, haz clic en Informes en la barra lateral y, a
continuación, selecciona el diagrama de trabajo pendiente en la lista
desplegable de informes.

Qué es un diagrama de evolución y cómo se interpreta?

El diagrama de evolución muestra la cantidad estimada y la cantidad real de
trabajo que se realiza en un sprint. El eje X horizontal de un diagrama de
trabajo pendiente indica el tiempo, mientras que el eje Y vertical suele indicar
los puntos de historia.

El diagrama de evolución se utiliza para supervisar todo el trabajo restante y
proyectar la posibilidad de alcanzar el objetivo del sprint. Supervisar el
trabajo total restante mediante iteraciones permite al equipo gestionar su
progreso y responder de la forma correspondiente.

Antipatrones ante los que estar alerta:

-El equipo termina antes de tiempo todos los sprints porque no están asumiendo
trabajo suficiente.

-El equipo no cumple los pronósticos sprint tras sprint porque están asumiendo
demasiado trabajo.

-La línea de evolución marca caídas pronunciadas en lugar de una evolución más
gradual debido a que el trabajo no se ha dividido granularmente.

-El propietario del producto añade o cambia el alcance en mitad del sprint.

Paso 8: Consultar el informe de sprints
=======================================

En cualquier momento durante o después del sprint puedes consultar el informe de
sprints o supervisar el sprint.

¿Qué es el informe de sprints?

El informe de sprints incluye el gráfico de trabajo pendiente, indica el trabajo
completado, el trabajo sin completar y cualquier trabajo que se haya añadido
tras iniciar el sprint.

Paso 9: Organizar la reunión de revisión del sprint
===================================================

La revisión del sprint, o demo del sprint, es una reunión participativa en la
que el equipo muestra lo que ha lanzado en cada sprint. Cada sprint suele
producir una parte funcional del producto que recibe el nombre de incremento.

Se trata de una reunión en la que se comparten muchas opiniones sobre el
proyecto e incluye una sesión de lluvia de ideas para poder decidir cuál es el
siguiente paso.

-Asistentes (principalmente): equipo de desarrollo, experto en scrum y
propietario del producto.

-Opcional: partes interesadas.

-Cuándo: normalmente el último día del sprint.

-Duración: normalmente dos horas para un sprint de dos semanas.

-Propósito: analizar el incremento y actualizar de forma colaborativa el backlog
del producto.

Preguntas que se deben plantear:

¿Ha cumplido el equipo el pronóstico del sprint?

¿Se ha añadido o eliminado trabajo en la mitad del sprint?

¿Hay algún trabajo que no se haya finalizado en el sprint?

En tal caso, pídeles que indiquen los motivos.

Paso 10: Organizar la reunión retrospectiva del sprint
======================================================

Tras finalizar el sprint, el equipo debe hacer una retrospectiva. Documenta la
retrospectiva en alguna plataforma. ¿Qué tal si usamos Confluence?

¿En qué consiste una reunión retrospectiva de sprints?

Asistentes: equipo de desarrollo, experto en scrum y propietario del producto.

Cuándo: Al acabar una iteración.

Duración: normalmente 90 minutos para un sprint de dos semanas.

Propósito: el equipo se inspecciona, lo que incluye sus procesos, herramientas e
interacción. Las incidencias de mejora suelen añadirse al backlog del siguiente
sprint.

Las retrospectivas no son un momento para quejarse sin adoptar medidas.
Empléalas para averiguar lo que funciona para que el equipo pueda seguir
concentrado en esas áreas. Asimismo, descubre qué es lo que no funciona y dedica
un tiempo a encontrar soluciones creativas y desarrollar un plan de acción. La
mejora continua es lo que sostiene e impulsa el desarrollo en un equipo ágil, y
las retrospectivas constituyen una parte esencial.

Preguntas que se deben plantear:

¿Qué aciertos tuvimos durante el sprint?

¿Qué podríamos haber hecho mejor?

¿Qué vamos a mejorar para la próxima vez?

Consejo de experto: Aunque todo vaya bien en el equipo, sigue haciendo
retrospectivas. Las retrospectivas ofrecen una orientación constante para que el
equipo siga haciendo las cosas bien.

Paso 11: Completar el sprint en Jira
====================================

Al final del sprint, debes completarlo. Si el sprint tiene incidencias
incompletas, puedes:

Mover las incidencias al backlog.

Mover las incidencias a un sprint futuro.

Mover las incidencias a un nuevo sprint que Jira se encargará de crear.

Paso 12: Repetir desde el paso 2
================================

Llegados a este punto, dispones de los conocimientos básicos sobre cómo crear el
backlog con las historias de usuarios, cómo organizar las historias de usuario
en sprints, iniciar el sprint y celebrar ceremonias de scrum. Tienes la
capacidad de decidir si esto funciona para tu equipo o si te gustaría pasar a
algunos temas más avanzados.

Una vez que tu equipo y tú hayáis completado los pasos anteriores, pasad al
artículo avanzado Cómo realizar prácticas de scrum avanzadas con Jira.

Fuentes
=======

https://www.atlassian.com/es/agile/scrum

ChatGPT

https://asana.com/es/resources/product-backlog

https://asana.com/es/resources/project-management-methodologies

https://www.atlassian.com/es/agile/project-management

https://www.atlassian.com/es/agile/tutorials/how-to-do-scrum-with-jira
