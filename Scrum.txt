===================
Guía de Scrum by dM
===================

¿Qué es scrum?
==============

Scrum es un marco de gestión de proyectos ágil que ayuda a los equipos a
estructurar y gestionar su trabajo a través de un conjunto de valores,
principios y prácticas. Al igual que un equipo de rugby (de donde recibe su
nombre) que se entrena para el gran partido, el scrum anima a los equipos a
aprender a través de las experiencias, a organizarse mientras trabajan en un
problema y a reflexionar sobre sus victorias y derrotas para mejorar
continuamente.

Si bien el scrum del que se hablará lo utilizan con más frecuencia los equipos
de desarrollo de software, sus principios y lecciones se pueden aplicar a todo
tipo de trabajo en equipo. Esta es una de las razones por las que el scrum es
tan popular. Considerado a menudo como un marco ágil de gestión de proyectos,
scrum describe un conjunto de reuniones, herramientas y funciones que funcionan
en conjunto para ayudar a los equipos a estructurar y gestionar su trabajo.

¿De qué se trata?
=================

La metodología Scrum se basa en “sprints” cortos que se usan para crear un ciclo
de proyecto. Estos ciclos duran de una a dos semanas y se organizan con equipos
de hasta 10 personas. Este enfoque es diferente al modelo de cascada, donde las
tareas individuales se dividen y relacionan por dependencias.

La metodología Scrum es única por varias razones, una de las cuales es la
intervención de un Scrum Master que es un gerente de proyectos que dirige las
reuniones diarias de Scrum, las demostraciones, los sprints y los análisis
retrospectivos de sprints. Estas reuniones tienen como objetivo conectar a todos
los participantes del proyecto y garantizar que las tareas se finalicen a
tiempo.

Si bien Scrum es una metodología de gestión de proyectos en sí misma, suele
asociarse mucho con un marco ágil. Esto se debe a que presentan principios
similares, como la valoración de las personas y la colaboración de los equipos
por encima de los procesos.

Recomendado para: Los equipos que usen un enfoque ágil también deberían usar, o
al menos probar, la metodología Scrum. Dado que los sprints se dividen en
equipos pequeños, este enfoque puede ser adecuado tanto para equipos pequeños
como grandes.

Metodología ágil frente a scrum
===============================

La metodología ágil es un enfoque general para la gestión de proyectos que
promueve la flexibilidad, la colaboración constante con el cliente, y la entrega
continua de productos funcionales. Se basa en los principios del Manifiesto
Ágil, que enfatiza responder a cambios, entregar software de forma rápida y
trabajar de manera colaborativa.

Scrum, por otro lado, es un marco de trabajo ágil específico que implementa esos
principios ágiles. Es una metodología ágil en sí misma, pero con roles, eventos
y artefactos específicos, como el Scrum Master, los Sprints (ciclos de trabajo
cortos), y los product backlogs (lista de tareas pendientes).

En resumen, Scrum es una forma de implementar la metodología ágil, pero la
metodología ágil es un concepto más amplio que incluye varios enfoques, como
Scrum, Kanban, Lean, entre otros.

La diferencia entre la metodología ágil y la definición de "scrum" se encuentra
en la guía de scrum y en el Manifiesto ágil. El Manifiesto ágil describe cuatro
valores:

-Personas e interacciones por encima de los procesos y las herramientas.

-Software de trabajo por encima de la documentación exhaustiva.

-.Colaboración con los clientes por encima de la negociación de contratos.

-Responder al cambio en lugar de seguir un plan.

La definición de scrum se basa en el empirismo y el pensamiento ágil. El
empirismo sostiene que el conocimiento proviene de la experiencia y que las
decisiones se toman en función de lo observado. El pensamiento lean reduce el
despilfarro y se centra en lo esencial. El marco de scrum es heurístico: se basa
en el aprendizaje continuo y en el ajuste a los factores fluctuantes. Reconoce
que el equipo no lo sabe todo al principio de un proyecto y que evolucionará a
lo largo de la experiencia. El scrum está estructurado para ayudar a los equipos
a adaptarse de forma natural a las condiciones y los requisitos de los usuarios
cambiantes, con el cambio de prioridades integrado en el proceso y ciclos de
lanzamiento cortos para que tu equipo pueda aprender y mejorar constantemente.

Aunque scrum está estructurado, no es del todo rígido. Su ejecución se puede
adaptar a las necesidades de cualquier organización. Existen muchas teorías
acerca de cómo deben trabajar los equipos de scrum exactamente para tener éxito.
Sin embargo, después de más de una década ayudando a los equipos ágiles a
realizar el trabajo en Atlassian, hemos aprendido que la comunicación clara, la
transparencia y la dedicación a la mejora continua siempre deben ser el núcleo
del marco de trabajo que elijas. Y el resto depende de ti.

Documento oficial
=================

La guía de metodología scrum se puede descargar desde > https://scrumguides.org/

El marco de scrum
=================

El marco de scrum está formado por un conjunto de valores, principios y
prácticas que los equipos de scrum siguen para desarrollar un producto o
servicio. Detalla los miembros de un equipo de scrum y sus responsabilidades,
los "artefactos" que definen el producto y el trabajo que hay que hacer para
crear el producto, así como las ceremonias de scrum que guían al equipo de scrum
en su trabajo.

Miembros de un equipo de scrum
==============================

Un equipo de scrum es un equipo pequeño y ágil que se dedica a ofrecer
incrementos de productos de forma comprometida. El tamaño de un equipo de scrum
suele ser reducido, de unas 10 personas, pero es lo suficientemente grande como
para llevar a cabo una cantidad considerable de trabajo en un sprint. El equipo
de scrum debe componerse de tres roles específicos: el propietario del producto,
el experto en scrum y el equipo de desarrollo.Y, puesto que los equipos de scrum
son interdisciplinares, el equipo de desarrollo está formado por evaluadores,
diseñadores, especialistas en experiencia de usuario e ingenieros de operaciones
además de desarrolladores.

El propietario del producto de scrum
====================================

Los propietarios son los referentes de sus productos. Se centran en entender los
requisitos empresariales, de los clientes y del mercado y, en consecuencia, en
priorizar el trabajo que debe realizar el equipo de ingeniería. Propietarios
efectivos de los productos

-Crean y gestionan el backlog del producto.

-Colabora estrechamente con la empresa y el equipo para garantizar que todo el
mundo entiende los elementos de trabajo del backlog del producto.

-Orienta al equipo claramente sobre qué funciones ofrecer a continuación.

-Decide cuándo lanzar el producto con una predisposición a una entrega más
frecuente.

El propietario del producto no siempre es el gestor del producto. Los
propietarios de los productos se centran en garantizar que el equipo de
desarrollo ofrece el máximo valor a la empresa. Además, es importante que el
propietario del producto sea una sola persona. Ningún equipo de desarrollo
quiere una orientación contradictoria por parte de varios propietarios de
productos.

=========================
Backlog o product backlog
=========================

La creación de productos comienza con una idea, pero para crear algo especial
hace falta contar con un equipo que trabaje con dedicación para poner esa idea
en práctica. Sí, hasta los iPhone fueron un prototipo alguna vez, hasta que se
abrieron camino y alcanzaron la popularidad que tienen gracias a que los
desarrolló el equipo correcto. Cuando gestionas un equipo de desarrolladores con
Scrum, mantener la organización es crucial para el éxito de los productos.

Entonces, ¿qué pueden hacer los equipos de Desarrollo para mantenerse
organizados y cumplir con los objetivos?: Listas de trabajos pendientes.

El trabajo pendiente del producto o product backlog es, en esencia, una lista de
tareas pendientes específicas. Si el equipo aplica una metodología ágil y tiene
en cuenta los principios del Agile Manifesto, el product backlog servirá para
dividir proyectos y determinar cuáles son las tareas más importantes. Esta
definición puede cambiar algo cuando estamos trabajando con marcos ágiles a gran
escala.

¿Qué es un product backlog?
===========================

Llamamos product backlog a una lista de funciones y elementos, ordenados según
las prioridades, que son necesarios para cumplir con los objetivos y las
expectativas del proyecto. La regla general es desarrollar uno de estos
conjuntos de trabajo pendiente del producto para cada producto y asignarle a un
equipo ese trabajo pendiente en particular.

A veces, hay muchos conjuntos de product backlogs y varios equipos que trabajan
en un solo producto más amplio. Tomemos el ejemplo de Adobe Creative Cloud.
Adobe Creative Cloud es un producto que abarca a muchos otros de menor tamaño
como Photoshop, Illustrator y After Effects. Cada uno de estos productos no tan
grandes tendrían su propio product backlog y diferentes equipos designados para
su desarrollo.

Los equipos que trabajan con metodologías ágiles dedican tiempo a crear
productos y a hacer ajustes a medida que los proyectos avanzan. Dada la
naturaleza de las metodologías ágiles, sabemos que las tareas del product
backlog no son definitivas e inamovibles y que no todos los elementos se podrán
finalizar. El equipo de Desarrollo deberá readaptar el trabajo pendiente del
producto a medida que se prioricen las tareas necesarias.

¿Qué incluye el product backlog?
================================

Por lo general, en el product backlog se incluyen las funciones, la reparación
de errores, la deuda técnica y la adquisición del conocimiento. Estos elementos
del trabajo pendiente del producto son los product backlogs items, elementos
clave para poder realizar el product backlog.

1. Funciones (historias de los usuarios)

Cuando hablamos de función, también conocida como historia del usuario, en Scrum
nos referimos a la función del producto que le resulta valiosa al usuario de ese
producto. Estas funciones pueden ser complejas (en muchos casos, épicas) o
pueden ser muy simples. Puede resultar útil elaborar un mapa de historias para
que el equipo determine qué es lo que más necesita el usuario.

2. Reparación de errores

Las reparaciones de errores se explican por sí solas. El equipo que trabaja con
Scrum debería ocuparse rápido de ellas para sostener la integridad del producto.
Algunos errores pueden ser lo suficientemente importantes como para interrumpir
el sprint en que se encuentra trabajando el equipo, mientras que otros pueden
esperar hasta el siguiente sprint. Sin embargo, hay una regla general sobre los
errores que indica que hay que tenerlos siempre al comienzo de la lista de
trabajo pendiente del producto para que el equipo no los olvide.

3. Deuda técnica

Al igual que con las deudas financieras, cuando no se resuelve la deuda técnica,
esta “acumula intereses”. Cuando los desarrolladores dejan trabajos técnicos al
final de la lista de trabajo pendiente del producto, esos trabajos se acumulan y
cada vez es más difícil cumplirlos. El equipo puede evitar la acumulación de la
deuda técnica si se organiza y se ocupa de los trabajos técnicos de menor tamaño
de manera progresiva y a diario.

4. Adquisición del conocimiento

La adquisición del conocimiento consiste en reunir información para cumplir con
otras tareas del product backlog más adelante. Si el equipo tiene una función
con la que no puede cumplir en caso de no reunir más información, entonces
podrías crear una tarea para adquisición de conocimientos; algo como crear un
prototipo, hacer un experimento o intentar con una prueba conceptual para
obtener la información necesaria para el desarrollo de la función.

¿Cómo se hace un product backlog?
=================================

El concepto de "trabajo pendiente del producto" o pila de producto abarca más
que una simple lista de pendientes. Puedes dividir tareas complejas en series de
pasos y delegarlas a los miembros del equipo Scrum según corresponda. A
continuación, compartimos los pasos para desarrollar con efectividad el trabajo
pendiente del producto.

1. Crea una hoja de ruta del producto

La hoja de ruta del producto es el pilar del trabajo pendiente del producto. El
equipo debe crear una hoja de ruta antes de preparar el product backlog porque
la hoja de ruta es un plan de acción sobre cómo cambiará el producto a medida
que se desarrolle. La hoja de ruta es la visión de largo plazo sobre el
desarrollo del producto y también puede evolucionar.

2. Haz un listado con los elementos del product backlog

Con la hoja de ruta del producto en mente, el equipo puede empezar a enumerar
los elementos del product backlog. Estos elementos pueden incluir acciones de
prioridad alta o ideas más abstractas. Durante esta fase de la preparación del
product backlog, también necesitarás comunicarte con todos los involucrados y
escuchar las ideas de mejora para el producto que tengan para aportar. Con una
plantilla de product backlog puede resultar mucho más fácil crear columnas de
tareas y después moverlas para reordenarlas.

3. Establece las prioridades

Después de que el equipo haya elaborado la lista de elementos o ítems del
product backlog habrá que ordenarla y priorizar las tareas que son más
importantes. Para identificar los elementos prioritarios piensa primero en los
clientes y analiza cuáles son los que les aportarán más valor.

4. Actualiza todo con regularidad

Mientras el equipo avance con el product backlog recuerda que ese trabajo
pendiente debe ser un documento vivo. Puedes agregar elementos continuamente y
definir las prioridades una y otra vez, o readaptarlos a medida que se ocupen de
cada uno de ellos.

Cómo priorizar los elementos del product backlog
================================================

Un componente esencial de la gestión del trabajo pendiente de un producto es
determinar las prioridades de las tareas. Si eres el Scrum master deberías
comprender profundamente qué funciones nuevas son las que pretenden ver en el
producto los demás participantes involucrados en este trabajo. A continuación,
compartimos algunas estrategias sobre cómo establecer las prioridades en una
lista de elementos del product backlog.

-Organiza las tareas por urgencia y por importancia: Cuando te centres en la
readaptación del trabajo pendiente, prueba con organizar las tareas según la
urgencia y la importancia. El equipo debe priorizar aquellos elementos del
product backlog que mejoren las funcionalidades del producto y también la
experiencia de los usuarios.

-Ocúpate primero de las tareas complejas: El equipo se puede sentir inclinado a
finalizar primero las tareas más simples para poder quitarlas del product
backlog y acortar la lista, pero en realidad es una forma poco eficiente de
gestionar los proyectos. El trabajo pendiente del producto seguirá creciendo, de
modo que ocuparse primero de las tareas más complejas puede resultar más
efectivo para el desarrollo del producto.

-Finaliza las tareas en sprints específicos: Los equipos ágiles trabajan en
sprints temporales específicos para finalizar los trabajos. Este método es muy
efectivo para la productividad. Al final de cada sprint, el encargado del
producto y cualquier otra persona que participe en el desarrollo podrá asistir a
una revisión del sprint contigo y el equipo de Desarrollo para garantizar que
todo esté encaminado. Las tareas que forman parte de cada sprint forman parte
del sprint backlog.

Comunícate con el equipo: La comunicación entre los miembros del equipo es
crucial para el proceso de priorización del product backlog Para ordenar
correctamente el trabajo pendiente y finalizar los elementos en un plazo
razonable, tienes que trabajar junto con tu equipo y seguir la guía de Scrum.

Ejemplo de product backlog
==========================

Los trabajos pendientes de productos pueden ser diferentes según el proyecto,
incluso algunos comienzan con una épica. Una épica es un problema global que
pretendes resolver para un cliente. A continuación, compartimos un ejemplo:

Épica: Como gerente de Marketing, quiero un sistema que me permita entregar
contenido de calidad a mis lectores.

Esta épica podría tener como resultado varias funciones que abarquen desde cómo
genera contenido un usuario en el sistema nuevo a cómo lo edita y lo comparte
con otros equipos. Para continuar con nuestro ejemplo de trabajo pendiente del
producto, podemos dividir la épica en historias de usuarios más específicas.

Historia 1: Como creador de contenido, quiero un sistema de gestión de
contenidos que me permita crear contenido para poder informar a los clientes
sobre nuestros productos.

Historia 2: Como editor, quiero un sistema de gestión de contenidos que me
permita revisar el contenido antes de publicarlo para poder garantizar que esté
bien escrito y optimizarlo para las búsquedas.

El product owner, el Scrum master y el equipo de Desarrollo determinarán las
funciones que debería incluir el producto a partir de las historias de los
usuarios y establecerán las prioridades según la importancia de cada historia.

Funciones que debería incluir el producto según la historia 1:

-Iniciar sesión (en el sistema de gestión de contenidos)
-Crear contenido
-Editar una página de contenido
-Guardar cambios
-Asignar contenido a un editor para su revisión

Como product owner, usarás la épica como orientación para la hoja de ruta del
producto y para los elementos de la lista de trabajo pendiente. Como puedes ver
en este ejemplo, una épica puede dividirse en muchas historias de usuarios y
funciones del producto.

Resumen:

Es el trabajo pendiente de un producto o más conocido por su término en inglés,
product backlog, es una lista ordenada de todas las tareas que se harán para el
desarrollo de un producto, cuando utilizas la metodología Scrum. que después se
subdivide en backlogs o sprint backlogs, funciones o elementos que hay que
finalizar y que, además, forman parte de una hoja de ruta más amplia.

Metodología Scrumban
====================

Como puedes imaginar, Scrumban es una metodología que se inspira en los procesos
Scrum y Kanban. Algunos lo consideran un enfoque híbrido que combina lo mejor de
ambos métodos.

Scrumban usa un ciclo de sprint similar al de la metodología Scrum, pero también
permite que se agreguen tareas individuales al plan, como el método Kanban. Esto
permite que los planes de proyectos mantengan una estructura simple y clara, y
que además se pueda finalizar el trabajo más importante. Scrumban también
organiza reuniones de Scrum para fortalecer la colaboración y mantener a los
objetivos siempre presentes.

Recomendado para: Si te gusta la idea de dividir un proyecto en tareas más
pequeñas, pero también deseas mantenerlo visualmente simple, Scrumban es ideal
para ti. Es la combinación perfecta entre simplicidad y claridad.

Waterfall vs Kanban vs Agile vs Scrum
=====================================

Waterfall: El modelo de cascada o Waterfall divide cada proyecto en diferentes
fases y estas se completan en orden secuencial.

Agile: La metodología ágil o Agile es una metodología iterativa que divide los
proyectos en varias fases dinámicas conocidas como "sprints".

Kanban: Kanban es una estrategia visual de gestión de proyectos que muestra el
trabajo en una vista tipo tablero.

Scrum: Scrum es un m~rco ágil que ayuda a los equipos a colaborar y realizar un
trabajo de alto impacto.

Fuentes
=======

https://www.atlassian.com/es/agile/scrum

ChatGPT

https://asana.com/es/resources/product-backlog

https://asana.com/es/resources/project-management-methodologies
