==================================
Guía de Gestión de Proyectos by dM
==================================

El documento "Make Your Work Flow: 5 steps to scale your support operations"
ofrece una guía para mejorar las operaciones de soporte al cliente mediante la
optimización de flujos de trabajo. A continuación, te resumo los principales
puntos del documento:

-Introducción a los flujos de trabajo: Se define un flujo de trabajo como el
conjunto de pasos que sigue un negocio para resolver tareas, como procesar
solicitudes de clientes. La implementación de herramientas adecuadas puede
ayudar a los equipos a gestionar preguntas comunes, dirigir consultas a los
agentes correctos y mejorar la precisión y velocidad de respuesta.

-Crecimiento y complejidad: A medida que una empresa crece, las tareas de
servicio al cliente se vuelven más complejas. Lo que antes podía manejarse de
forma manual requiere un enfoque más estructurado para mantener la calidad y la
rapidez en las respuestas.

Beneficios de mejorar los flujos de trabajo
===========================================

-Agentes enfocados en el cliente: Automatizar tareas administrativas permite que
los agentes se centren en resolver los problemas de los clientes en lugar de
preocuparse por tareas repetitivas.

-Velocidad de respuesta: La automatización mejora los tiempos de respuesta, lo
que aumenta la satisfacción del cliente.

-Ahorro de costos: Optimizar los procesos reduce la necesidad de contratar más
personal.

-Claridad y menos confusión interna: Un flujo de trabajo claro evita que los
agentes pierdan tiempo averiguando qué hacer, mejorando la eficiencia.

Cinco pasos para escalar las operaciones de soporte
===================================================

-Analizar los procesos actuales: Identificar los cuellos de botella y las tareas
que pueden automatizarse o eliminarse.

-Usar la automatización: Implementar herramientas como bots para proporcionar
respuestas automáticas a preguntas simples.

-Asignar tickets al mejor agente: Usar enrutamiento basado en habilidades para
asegurar que los tickets lleguen al agente más adecuado.

-Mantener informados a los clientes: Usar disparadores automáticos para mantener
a los clientes al tanto del estado de sus solicitudes.

-Ofrecer soporte en múltiples canales: Asegurarse de que los agentes puedan
conectar las interacciones de los clientes a través de distintos canales
(teléfono, correo electrónico, redes sociales, etc.).

-Conclusión: Un buen flujo de trabajo empodera a los equipos, reduce la
confusión, mejora la satisfacción del cliente y permite a las empresas crecer
sin perder calidad en el servicio.

Este documento es ideal para aquellos interesados en optimizar sus operaciones
de atención al cliente, especialmente en empresas en crecimiento.

========================================
Cómo priorizar el trabajo más importante
========================================

Si eres como la mayoría de las personas, normalmente comienzas tu trabajo con la
intención de ser lo más productivo posible. Sin embargo, a medida que el día
avanza, te encuentras atendiendo múltiples solicitudes urgentes mientras ves
cómo se agranda tu lista de tareas. Lo que preparaste al principio para hacer
siempre parece quedar a un lado.

Si esto te suena conocido, no eres el único. Muchos de nosotros no tenemos un
proceso que nos permita priorizar tareas en el trabajo y siempre sentimos que
corremos detrás de lo que hay que hacer. Ponemos en riesgo el cumplimiento de
los vencimientos clave y nos preocupamos continuamente por mantenernos en estado
de fluidez sin distraernos. Pero ya basta. Puedes tomar la delantera y tener los
vencimientos bajo control con unos simples métodos útiles para establecer las
prioridades y gestionar las cargas de trabajo.

Cuando tomas medidas para priorizar tu trabajo puedes ser proactivo y no
reactivo. Así, en definitiva, aumentas tu productividad, cumples con los
vencimientos y gestionas mejor el tiempo en tu trabajo. Mira los consejos que te
presentamos a continuación para hallar un proceso que te ayude a priorizar tus
tareas en el trabajo:

Comienza por reunir tus acciones pendientes y crea una lista de tareas
======================================================================

No puedes decidir cómo priorizar las tareas si no tienes una vista única de todo
lo que necesitas que se haga primero. Puede parecer rudimentario; sin embargo,
es algo que muchas veces pasamos por alto en la urgencia por ponernos a trabajar
en los proyectos. En vez de actuar así, tómate el tiempo para armar una lista
con los trabajos que debes hacer en todos tus proyectos. Asegúrate de dividir
las tareas más grandes en subtareas para no sentirte abrumado.

Una vez que tus tareas estén listadas en un lugar, agrégales información, como
la cantidad de tiempo que llevará finalizarlas, el nivel de importancia o la
urgencia. Con todas tus tareas en un mismo lugar, podrás tener un panorama
general de lo que hace falta hacer y además, tendrás una idea de cuánto trabajo
hay y a qué debes prestarle atención ahora.

No te preocupes por organizar tus tareas demasiado pronto, simplemente ponlas a
todas en un mismo sitio. Reunir todo lo necesario es un primer paso esencial,
porque si puedes organizarte al principio de un proyecto o del trimestre, será
mucho más fácil mantenerte organizado durante un período más prolongado.

Adopta un método de priorización de tareas para organizar tu trabajo y tu lista
de pendientes
===============================================================================

Cómo priorices tus tareas, en definitiva, dependerá de la naturaleza de tu
trabajo y de tu estilo personal, pero hay algunos métodos comunes para la
priorización de las tareas que pueden servirte. Dales una mirada a algunos de
los métodos útiles para priorizar tareas:

1. No lo dejes para mañana...

El método No lo dejes para mañana... se trata de una sugerencia basada en una
cita del brillante Mark Twain que dijo: “Si tienes que comer una rana, mejor
hacerlo a primera hora de la mañana”. En el mundo de la gestión del trabajo,
esto significa ocuparte primero de las tareas más grandes y complejas.

Las tareas importantes que aportan a un fin superior y están vinculadas a los
principales objetivos deberían estar primero en la lista de prioridades. Una vez
que hayas hecho lo más urgente del día, podrás ocuparte de las demás tareas
basándote en otros factores, como el de los vencimientos, y sentir menos estrés,
dado que ya te habrás ocupado de lo más importante.

2. La matriz de decisiones de Eisenhower

Con otro de los métodos, la matriz de decisiones de Eisenhower o “la matriz de
lo importante y lo urgente”, se comienza por organizar las tareas en cuatro
cuadrantes, según si son importantes, urgentes, ambas o ninguna de ellas. Como
general condecorado durante la Segunda Guerra Mundial y después presidente de
los Estados Unidos, Dwight D. Eisenhower era partidario de tomar decisiones
importantes con rapidez, entonces se le ocurrió este método que le fue muy útil.

Este planteo te sirve para decidir qué hacer ahora (lo importante y urgente),
qué debes planificar (lo importante que no es urgente), qué puedes delegar (lo
que no es importante pero sí urgente) y lo que posiblemente podrías descartar
(todo lo que no es importante ni urgente). Es una excelente herramienta para
priorizar las tareas, tomar decisiones rápido y estar siempre organizado.

La matriz de decisiones de Eisenhower puesta en acción: Un colega acaba de
enviarte un email en el que te pide ayuda con una presentación para ventas. La
solicitud es urgente porque se debe hacer hoy; pero ¿es lo suficientemente
importante (para ti) como para que pospongas otros trabajos? Mide cada una de
las tareas de tu propia lista diaria según la importancia y la urgencia para
decidir si puedes cambiar de tarea para ayudar a tu colega o si debes posponerla
para más tarde. Saber cuáles son tus compromisos también te ayudará a poder
decir “no” cuando sea necesario.

3. Método ABCDE

Con el método ABCDE tomas esa lista de tareas que creaste, le asignas una letra
(valor) a cada tarea según su nivel de importancia y después te ocupas de las
tareas según su calificación. Es una forma rápida y útil de evaluar la
importancia de las tareas para definir las prioridades y administrar bien el
tiempo. Es similar a colocarle una nota a cada tarea, desde A (la más
importante) a E (eliminar si es posible). Asegúrate de trabajar siempre primero
con tus tareas A y B, porque son las que te ayudarán a alcanzar el éxito en el
trabajo.

El método ABCDE también funciona bien cuando lo combinas con “No lo dejes para
mañana...”. Si comienzas con las tareas A y B, después podrás dedicar el resto
del día a las tareas de menor importancia como las C, D y E.

4. Fragmentación

Según el método de fragmentación, un fragmento es una actividad laboral
focalizada. Puede tratarse de una unidad independiente (vaciar la bandeja de
entrada), una porción de un proyecto más amplio (terminar el primer borrador de
un documento) o un conjunto de pequeñas tareas sin relación entre sí. La clave,
en este caso, es convertir estos fragmentos en bloques temporales
ininterrumpidos y focalizados.

Desconecta las distracciones externas y muestra que no estás disponible.
Aprovecha las herramientas de colaboración con funciones como la de No molestar.
Como alternativa, puedes usar el calendario para bloquear períodos en los que
necesites concentrarte profundamente y, a la vez, mostrar a los demás que no
deberían programar nada contigo durante esos períodos. Si este método te da
resultado, considera, si puedes, aplicar la política de miércoles sin reuniones
para tu equipo y para ti. Independientemente de lo que hagas, descansa entre
fracciones de tiempo para relajarte y renovar tu energía.

Usa tu calendario para programar tus tareas
===========================================

Independientemente de que una tarea se haga en minutos o te lleve una semana,
siempre tiene un principio y un fin. Así que, una vez que tengas tu lista,
agrega una fecha de inicio y una de entrega a cada tarea. Al hacerlo te
asegurarás de no pasar nada por alto a medida que lleguen trabajos nuevos y las
prioridades cambien.

Si tienes una tarea asignada sin fechas claras de inicio o de entrega, asegúrate
de pedir esa información para poder programar el tiempo que le dedicarás y
plantear las expectativas. Una vez que conozcas esas fechas, incluso tendrás la
posibilidad de configurar tu fecha personal de finalización para un día u
horario anteriores a la fecha efectiva de vencimiento. De este modo, podrás
estar listo en caso de que surjan imprevistos o tengas que entregar el trabajo
antes. Piensa en tu trabajo como si fuera un rompecabezas: debes saber que las
piezas encajarán unas con otras y que las fechas de inicio y de entrega son los
bordes de esas piezas del rompecabezas.

Para seguir con la misma metáfora, si las tareas son las piezas del rompecabezas
con las fechas de inicio y de entrega como bordes; entonces, tu calendario es el
tablero del rompecabezas, el lugar donde armas esa gran imagen. Úsalo para
programar el trabajo, equilibrar las tareas según el nivel de dedicación o de
prioridad para no sobrecargarte y asegurarte de cumplir con los vencimientos. Si
adoptas uno de los métodos de priorización anteriores, o una combinación de los
que prefieras, usa ese marco para ayudarte a completar tu cronograma y
administrar el tiempo.

Comunica el progreso de las tareas a tus compañeros de equipo
=============================================================

Por último, no te olvides de incluir a tus compañeros de equipo. Pueden estar
esperando que finalices una tarea o que tengas tiempo disponible para
dedicárselo a ellos. Al brindarles actualizaciones de estado proactivamente
sobre el progreso de una tarea, como cuándo tienes pensado finalizarla o si
surgen demoras o bloqueos, puedes reducir la cantidad de solicitudes de
actualización que recibes. En vez de responder constantemente a esas
solicitudes, puedes seguir haciendo tu trabajo con productividad y eficiencia.
Lee: Cómo escribir un informe de estado del proyecto que sea efectivo

El trabajo con prioridades claras es un trabajo productivo
==========================================================

Cuando estableces prioridades claras para tu trabajo, puedes aumentar la
productividad, gestionar mejor tu tiempo y sentirte confiado de que cumplirás
con los plazos, siempre. Impulsa tu productividad aun más con una herramienta de
gestión del trabajo como Asana; para organizar y gestionar todas tus tareas,
grandes o pequeñas, en un mismo lugar.

Coordinación de proyectos vs Gestión de proyectos
=================================================

Si nunca antes has trabajado en un puesto relacionado con la coordinación de
proyectos, estos dos términos pueden parecer similares, pero en realidad son un
poco diferentes. La coordinación de proyectos se centra en las tareas diarias
necesarias para mantener un proyecto funcionando de manera fluida, mientras que
la gestión de proyectos implica una planificación más general, de alto nivel,
como establecer los objetivos del proyecto y sus entregables.

Los gestores de proyectos a menudo son responsables tanto de la gestión de
proyectos como de la coordinación de proyectos. Sin embargo, algunos equipos
pueden incluir el puesto de coordinador de proyectos por separado para que este
se encargue de las tareas administrativas esenciales del día a día. Por ejemplo,
si un gerente de proyectos crea un plan de proyecto completo, el coordinador de
proyectos ayudaría a ejecutar ese plan en el día a día.

¿Por qué es importante la coordinación de proyectos?
====================================================

Un plan del proyecto solamente es bueno si se ejecuta bien. Independientemente
de cuán cuidadosamente se diseñe una iniciativa, es el trabajo de coordinación
del día a día lo que mantiene al proyecto en marcha y encaminado. En ese
sentido, la coordinación eficaz del proyecto puede ayudarte a hacer lo
siguiente: 

-Agilizar la comunicación con los participantes y miembros del equipo.

-Quitar rápidamente los obstáculos que afectan a los miembros del equipo del
proyecto y lograr que el trabajo siga avanzando.

-Supervisar el cronograma del proyecto y asegurarte de que el trabajo se realice
según lo programado.

-Dar seguimiento al presupuesto del proyecto y gestionar los costos.

-Asegurarte de que sea fácil acceder a la información del proyecto.

6 habilidades esenciales para la coordinación de proyectos y algunos consejos
para dominarlas
=============================================================================

Puede que te estés preguntando qué hace un coordinador de proyectos y qué
habilidades son necesarias para realizar el trabajo de project coordinator o
coordinador de proyectos. El grueso de la coordinación de proyectos en el día a
día consta de seis habilidades esenciales. Cuando se dominan, estas habilidades
pueden ayudarte a que los proyectos avancen sin problemas, desde la
planificación hasta la ejecución y la entrega.

1. Mantén el trabajo de acuerdo a lo programado

Los retrasos en los plazos son una de las razones más comunes del fracaso de los
proyectos. De hecho, según el Índice de la anatomía del trabajo de 2021, cada
semana, los trabajadores del conocimiento no logran cumplir con el 26 % de los
plazos. Es así como la capacidad de mantener el trabajo al día es un componente
de suma importancia en la coordinación de proyectos de éxito.

Cómo hacerlo:

Crea un programa del proyecto con plazos claros para cada entregable y
subentregable del proyecto (los pasos más pequeños necesarios para finalizar una
tarea). Para hacer esto, cuando asignes las fechas de entrega hazlo de atrás
hacia adelante, empezando por la fecha límite, de modo que puedas estar seguro
de que le asignas suficiente tiempo a cada componente. A medida que vayas
marcando cada entregable y subentregable realizado, será fácil ver cómo avanza
el trabajo a lo largo del tiempo; además, será mucho menos probable que te
saltes un paso. 

2. Organiza y da seguimiento a los entregables

Los proyectos suelen tener muchas variables. Cada tarea individual tiene su
propia fecha de entrega, su encargado y su prioridad exclusivos; y, a medida que
avanza el proyecto, las tareas pasan por distintas etapas de finalización.
Encontrar una manera de organizar y dar seguimiento a esas variables es clave
para que la coordinación de proyectos sea exitosa.

Cómo hacerlo:

Utiliza herramientas visuales para dar seguimiento a los entregables del
proyecto y mejorar así la coordinación de proyectos. Por ejemplo, puedes usar un
tablero Kanban para mostrar el progreso del trabajo a través de diferentes
etapas, un diagrama de Gantt para ver una línea de tiempo horizontal o un
calendario de proyecto para visualizar el trabajo de un mes completo en una
vista central. En lugar de usar elementos estáticos de seguimiento de proyectos
u hojas de cálculo que constantemente debes mantener actualizados, te
recomendamos utilizar una herramienta de gestión de proyectos para ver y
gestionar los entregables. Esto te permite a ti y a tu equipo acceder fácilmente
a las tareas del proyecto, trabajar en ellas y actualizarlas en tiempo real.

3. Da seguimiento a los costes del proyecto

Es verdad que no puedes comprar amor con dinero, pero seguro te ayudará a
impulsar los proyectos para llegar a la línea de meta. De hecho, el presupuesto
de un proyecto con frecuencia es el factor limitante que determina si se puede
llevar a cabo el trabajo. Eso significa que el seguimiento y la gestión de los
costos del proyecto es una de las tareas más importantes en la lista de tareas
pendientes del coordinador de proyectos.

Cómo hacerlo:

Crea un presupuesto detallado del proyecto. Un plan claro de presupuesto del
proyecto es la mejor manera de planificar, dar seguimiento y controlar los
costes a lo largo del ciclo de vida del proyecto. Al igual que el programa del
proyecto, los presupuestos del proyecto generalmente desglosan cada entregable
en subentregables para poder calcular de manera efectiva los recursos necesarios
y el costo de cada uno. Tu presupuesto debe incluir los costos de cada recurso y
entregable, un cronograma de cuándo esperas gastar los fondos, la persona
responsable de cada tarea y un lugar donde puedas ir comparando los costos
presupuestados con los costos reales.

4. Comunica las actualizaciones a los participantes

Es importante que tu equipo sepa cómo avanza el proyecto y mantenerlos
informados con respecto a cualquier cambio inesperado. Es así como informar el
estado del proyecto de manera regular es un componente de suma importancia para
la coordinación exitosa del proyecto. Es la mejor manera de garantizar que los
participantes estén en sintonía, detectar riesgos de manera proactiva y mantener
el trabajo encaminado y dentro del presupuesto.

Cómo hacerlo:

Domina el arte de elaborar informes de estado del proyecto para lograr una
coordinación de proyectos exitosa. Un informe de estado del proyecto permite que
de un vistazo, los participantes reciban información con respecto al progreso
del proyecto. Por lo general, indican el estado del proyecto (en curso, en
riesgo, con retraso), incluyen una descripción general de cada área del proyecto
y resumen los principales aspectos destacados, obstáculos o riesgos inesperados.
Dependiendo de la duración de tu proyecto, puedes distribuir un informe de
estado del proyecto cada semana (para proyectos más cortos) o cada mes (para
proyectos más largos).

En lugar de comenzar cada informe de estado del proyecto desde cero, crea una
plantilla reutilizable. De esa manera, evitarás los pormenores del trabajo y te
asegurarás de incluir información clave en todo momento. El software de gestión
de proyectos puede facilitar aún más este proceso. Cuando das seguimiento a los
entregables en una herramienta centralizada, puedes crear un informe en el mismo
lugar donde tu trabajo se aloja en vez de tener que examinar manualmente los
datos del proyecto en varias herramientas diferentes. Con la herramienta de
gestión de proyectos adecuada, una tarea que puede llevar horas se reduce a unos
pocos clics.

5. Documenta la información del proyecto

A todos nos ha pasado: has comenzado un proyecto nuevo que te parece muy
familiar y te das cuenta de que ya habías hecho algo similar un año antes. Pero
cuando intentas identificar lo que hiciste y cómo fue el proyecto anterior, tu
memoria se queda en blanco.

Es por eso que documentar la información del proyecto es un factor clave en la
coordinación de proyectos. Es mucho más fácil (y más rápido) generar registros
de los procesos y notas mientras estás en pleno trabajo que intentar recordar
detalles críticos más tarde.

Cómo hacerlo:

Crea documentación del proceso, un documento interno que describa las tareas y
los pasos necesarios para lanzar un nuevo proyecto o proceso. Por ejemplo,
puedes crear documentación de un proceso que detalle todos los pasos necesarios
para incorporar empleados nuevos, los requisitos para probar una función web
nueva o el flujo de trabajo para actualizar y publicar los artículos de un blog.
Ten en cuenta que la documentación del proceso está destinada a ser un registro
dinámico que se actualiza según sea necesario, por lo que debes asegurarte de
que tu equipo pueda editarlo y acceder fácilmente.

6. Planifica y programa reuniones

La coordinación de los proyectos a menudo implica planificar y organizar
reuniones con tu equipo y participantes externos. Pero para aprovechar al
máximo el tiempo de todos, es importante asegurarte de que cada reunión tenga un
propósito estratégico y un plan de reunión concreto. Cuanto más eficientes sean
tus reuniones, más tiempo y capacidad intelectual tendrá tu equipo para abordar
los objetivos del proyecto.

Cómo hacerlo:

Organiza las reuniones de manera consciente. En lugar de programar reuniones
automáticamente, considera si realmente las necesitas. Por ejemplo, ¿podrías
enviar un informe de estado o una actualización asincrónica en su lugar?

Si decides que la reunión es necesaria, asegúrate de que sea eficaz y valiosa
para todas las personas involucradas. Puedes hacerlo creando una agenda e
identificando los elementos de lectura previa, tomando notas de la reunión y
distribuyéndolas una vez finalizada la reunión, y estableciendo acciones
pendientes claras a las cuales dar seguimiento. 

4 cualidades de un coordinador de proyectos exitoso
===================================================

Ya sea que estés buscando mejorar tus habilidades de coordinación de proyectos o
quieras contratar a un coordinador de proyectos para tu equipo, te presentamos
cuatro cualidades esenciales que no pueden faltar.

-Habilidades de comunicación. La coordinación del trabajo requiere que hables
con los participantes y los miembros del equipo en el día a día. Esto incluye
asignar tareas, proporcionar actualizaciones de los proyectos, coordinar
reuniones y ser el punto de contacto para la solicitud de aprobaciones y
recursos.

-Gestión del tiempo. Una buena gestión del tiempo es fundamental, especialmente
cuando haces malabarismos con todas las variables de un proyecto entero. Esto se
aplica tanto a la gestión del tiempo a nivel personal como a la capacidad de
gestionar el cronograma de un proyecto y garantizar que los entregables se
realicen a tiempo.

-Resolución de problemas. Cuando inevitablemente surgen situaciones inesperadas,
es importante tomar los problemas con calma y resolverlos de manera estratégica.
Por eso, las habilidades efectivas de resolución de problemas a menudo resultan
útiles para un coordinador de proyectos.

-Atención a los detalles. Los detalles son importantes para un coordinador de
proyectos, especialmente cuando estableces fechas de entrega para las tareas,
programas reuniones y creas documentación detallada de un proceso. Cuando haces
bien las cosas pequeñas, tu equipo puede estar tranquilo sabiendo que no tiene
que verificar el trabajo dos veces.

La coordinación de proyectos es la clave
========================================

La coordinación de proyectos es fundamental para el éxito de cualquier proyecto,
a lo largo de su ciclo de vida. La gestión de proyectos de alto nivel y elaborar
y establecer cuidadosamente el plan del proyecto, los objetivos, los hitos y el
alcance del proyecto te servirán hasta cierto punto; es la coordinación del día
a día lo que ayuda a utilizar estas metodologías de planificación y a llevar tu
iniciativa desde la planificación hasta su finalización.

=============================================================
Los tres ingredientes de las buenas publicaciones de software
=============================================================

Mezcla una parte de arquitectura con dos partes de trabajo en equipo. Añade
automatización y remueve.

En algún punto de tu carrera (si es que no ha ocurrido ya), te verás implicado
en una publicación monolítica de software. Es decir, una publicación de software
con interdependencias y errores inmanejables que requiera tener a todo el equipo
trabajando a todas horas. Por no hablar de que, una vez en producción,
probablemente requerirá varios parches.

El lanzamiento de código (la publicación del software) es un buen indicador de
la metodología ágil para desarrolladores de software. Todos los esfuerzos para
hacer que la planificación, la programación y las pruebas sean más rápidas son
en vano si la publicación no es fluida. Por ello, los equipos ágiles y de DevOps
adoptan la automatización y la integración continua, integran el desarrollo y
las operaciones en una fase temprana del desarrollo y solucionan los defectos
inmediatamente.

Tener el código constantemente en un estado publicable es el mayor distintivo de
un desarrollo ágil. Toda la planificación lean y el desarrollo iterativo del
mundo no significarán nada si no puedes lanzar el código en el momento en el que
decidas que está listo.

Las buenas publicaciones de software empiezan por una arquitectura modular
==========================================================================

En cualquier programa de software, lo mejor son las publicaciones sencillas y
frecuentes del software. Un equipo puede convertir la publicación en una parte
natural de su cultura ágil creando una arquitectura modular (o aproximándose a
ella). En lugar de tener una aplicación de gran tamaño (como el monolito
mencionado anteriormente), divídela en varios módulos en una fase temprana del
programa.Agrupa funcionalidades similares en aplicaciones o componentes más
pequeños, y mantén contratos de API claros entre cada una de las aplicaciones y
los componentes. Estas API pueden probarse automáticamente en cada compilación
para garantizar la compatibilidad y reducir el riesgo en la publicación del
software.

Una arquitectura modular implica que no tendrás que publicar todo el software en
un lanzamiento a lo grande, y los contratos de API simplifican la actualización
de componentes y aseguran la compatibilidad entre versiones. En pocas palabras,
las publicaciones modulares requieren menos partes móviles. Y eso se traduce en
publicaciones más sencillas.

Las buenas publicaciones de software se fundamentan en relaciones
extraordinarias
=================================================================

El desarrollo de software rara vez se lleva a cabo en el vacío. De hecho, un
buen desarrollo de software implica a todo el equipo, desde la gestión de
productos a las operaciones. Por ejemplo, el equipo de operaciones es un socio
clave para entregar el software a producción, dado que ayuda a que el software
llegue a los usuarios finales.

Los equipos de desarrollo informan a los equipos de operaciones y ayudan a
mejorar su rendimiento con estas técnicas:

-Crea una lista clara de materiales en cada publicación de software. Los equipos
de operaciones no siempre tienen el mismo nivel de contexto sobre la publicación
que el equipo de desarrollo.

-En cada incidencia que se resuelve en la publicación, proporciona un vínculo de
vuelta al gestor de incidencias y al sistema de control del código fuente para
que el equipo de operaciones tenga el mismo contexto si surgen problemas durante
el despliegue.

-En ocasiones, surgen incidencias al insertar código desde el entorno de
desarrollo al entorno de pruebas. Aísla estas incidencias, dado que podrían
surgir de nuevo durante la producción.

-Pueden ocurrir problemas durante el despliegue, de modo que el equipo de
operaciones siempre debe tener una ruta de escalación clara para resolver
problemas fácilmente.

Los equipos de operaciones pueden ayudar a sus homólogos de desarrollo con estas
sugerencias:

-Cuando surjan problemas en producción, dedica algo de tiempo a entender las
causas y las soluciones. De ese modo, se evitarán en el futuro (o se gestionarán mejor).

-Migra los datos de configuración de producción de nuevo al entorno de pruebas y
desarrollo para evitar desajustes de la configuración.

A medida que el código se migra del desarrollo a pruebas y por último a
producción, los datos clave de configuración y de usuario se migran en sentido
contrario: de producción a pruebas y por último a desarrollo. Esta relación
bidireccional ayuda al entorno de desarrollo a replicar con mayor precisión el
entorno de producción. Esto significa menos bugs y sorpresas en el día de la
publicación.

En las buenas publicaciones de software la inserción es sencilla
================================================================

¡Automatiza! ¡Automatiza! ¡Automatiza!

La automatización de la publicación de software es la mejor manera de mejorar la
cultura de publicación. Si la publicación de software aún no está automatizada,
empieza por automatizarla en un entorno de ensayo. Cuando todos vean lo fácil
que es, el paso natural será automatizar también las implementaciones de
producción.

Si las publicaciones son complicadas, acostúmbrate a publicar software
frecuentemente, aunque solo sea en el entorno de ensayo. Si el equipo de
desarrollo experimenta las dificultades de la publicación, se sentirán motivados
para innovar con el objetivo de simplificarla (y automatizarla).

Las pruebas automatizadas y la integración continua son aspectos clave en los
que se fundamentan las buenas publicaciones. Asegúrate de que los tiempos de
compilación y de pruebas sean lo más cortos posibles, y recuerda que las
compilaciones fáciles de validar también son fáciles de publicar. Esto se debe a
que el ciclo de validación se ajusta mejor al equipo.

¡Las buenas publicaciones de software están muy bien!

Tener el código constantemente en un estado publicable es el mayor distintivo de
un desarrollo ágil.

Toda la planificación esbelta y el desarrollo iterativo no significan nada si no
puedes realizar el lanzamiento con rapidez.

Cómo lo hacemos?

Para nosotros, las publicaciones de software frecuentes son más fáciles de
gestionar para nuestras propiedades SaaS. En cuanto a los productos
descargables, la colaboración estrecha entre los equipos de desarrollo,
operaciones e ingeniería de compilación contribuye en gran medida al éxito.
Estos grupos deben trabajar conjuntamente para automatizar las publicaciones de
software y adaptar proactivamente la automatización según los cambios que están
por venir en los productos. Muchos de los equipos de Atlassian implementan
automáticamente cada compilación satisfactoria de la línea principal en un
entorno de ensayo. Cuando llega el momento de mover una publicación de software
al entorno de ensayo o de publicarla para los clientes, estos equipos pueden
desencadenar la automatización de la implementación con tan solo pulsar un
botón.

Como desarrolladores de software, la publicación de software debe ser el punto
álgido de nuestro ciclo de innovación. Vemos a los clientes interactuar con el
código que hemos programado y nos aportan su feedback. Lograr que las
publicaciones sean una parte natural de tu día de trabajo simplifica el paso del
código a producción y proporciona la satisfacción de decir: "¡Ese código es
mío!".

===================
Revisión del código
===================

Los equipos ágiles se autorganizan y sus habilidades abarcan todo el equipo.
Esto se consigue, en parte, gracias a la revisión del código. La revisión del
código ayuda a los desarrolladores a aprender la base de código, así como a
utilizar nuevas tecnologías y técnicas que aumentan sus habilidades.


Pero ¿qué es exactamente la revisión del código?

Cuando un desarrollador deja de trabajar en una incidencia, otro desarrollador
revisa el código y se plantea lo siguiente:

-¿Hay errores lógicos obvios en el código?

-Teniendo en cuenta los requisitos, ¿están todos los casos implementados
completamente?

-¿Las nuevas pruebas automatizadas son suficientes para el nuevo código? ¿Deben
reescribirse las pruebas automatizadas actuales para tener en cuenta cambios en
el código?

-¿El nuevo código sigue las directrices de estilo actuales?

Las revisiones del código deben integrarse con el proceso actual del equipo. Por
ejemplo, si un equipo sigue flujos de trabajo de ramas de tareas, inicia una
revisión del código después de que todo el código se haya escrito y las pruebas
automatizadas se hayan ejecutado y superado, pero antes de que se fusione el
código en el repositorio remoto. Así se asegura que el revisor del código
dedique su tiempo a comprobar aspectos no detectados automáticamente y evita que
malas decisiones de programación contaminen la línea de desarrollo principal.

¿Qué ventajas tiene para un equipo ágil?
========================================

Todos los equipos pueden beneficiarse de las revisiones del código
independientemente de la metodología de desarrollo. Los equipos ágiles, sin
embargo, pueden obtener muchas ventajas debido a que el trabajo se encuentra
descentralizado por todo el equipo. Nadie es la única persona que conoce una
parte específica de la base de código. En pocas palabras, las revisiones del
código facilitan la transmisión del conocimiento en toda la base de código y en
todo el equipo.

Las revisiones del código transmiten conocimiento

En el núcleo de todos los equipos ágiles se encuentra una flexibilidad
inigualable: una capacidad de descargar trabajo del backlog y empezar su
ejecución por parte de todos los miembros del equipo. Como resultado, los
equipos son más capaces de gestionar los nuevos trabajos porque nadie realiza
una tarea esencial. Todo el equipo de ingenieros puede asumir trabajo de
frontend y de servidor.

A medida que las revisiones del código muestran a los desarrolladores nuevas
ideas y tecnologías, escribirán cada vez mejor código.

Las revisiones del código logran mejores estimaciones

¿Recuerdas la sección sobre estimaciones? La estimación es un ejercicio de
equipo. De ese modo, se realizan mejores estimaciones cuando el conocimiento del
producto se extiende por todo el equipo. Al añadirse nuevas funcionalidades al
código existente, el desarrollador original puede proporcionar buenos feedback y
estimaciones. Además, todos los revisores del código adquieren conocimiento de
la complejidad, problemas conocidos y preocupaciones con esa área de la base de
código. El revisor del código comparte ese conocimiento del desarrollador
original acerca de esa parte de la base de código. Esta práctica crea varias
fuentes de datos bien informados que, al utilizarse para una estimación final,
siempre consiguen que esa estimación sea más sólida y fiable.

Las revisiones del código permiten descansar

A nadie le gusta ser el único punto de contacto acerca de una parte del código.
Asimismo, nadie quiere zambullirse en una parte crítica del código que no hayan
escrito ellos, especialmente durante una urgencia de producción. Las revisiones
del código transmiten conocimiento por todo el equipo para que cualquier miembro
pueda tomar las riendas y seguir pilotando la nave. (En Atlassian nos encanta
mezclar metáforas). Pero lo importante es esto: dado que no hay un único
desarrollador crítico, todos los miembros del equipo pueden descansar como sea
necesario. Si te encuentras anclado a tu mesa con el sistema de control de
versiones, la revisión del código es una buena manera de liberarte. Esa
libertad permite tomarse esas merecidas vacaciones o dedicar algún tiempo a
trabajar en otra área del producto.

Las revisiones del código enseñan a los nuevos ingenieros

Un aspecto especial de la metodología ágil es que cuando se unen nuevos miembros
al equipo, los ingenieros más experimentados actúan como mentores. La revisión
del código les ayuda a simplificar las conversaciones acerca de la base de
código. A menudo, los equipos tienen conocimiento oculto dentro del código que
sale a la luz durante su revisión. Los nuevos miembros, con una mirada más
fresca, descubren áreas laboriosas y retorcidas de la base de código que
necesitan una nueva perspectiva. De modo que las revisiones del código ayudan a
que el conocimiento existente se combine con las nuevas opiniones.

Consejo de experto: Ten en cuenta que en la revisión del código no solo se trata
de que un miembro del equipo experimentado revise el código de un novato. La
revisión del código debe ocurrir en todo el equipo en todos los sentidos. ¡El
conocimiento no tiene fronteras! Sí, la revisión del código ayuda a los nuevos
ingenieros, pero no debe usarse únicamente como un ejercicio de mentor.

¡Pero las revisiones de código tardan mucho tiempo!

Eso es verdad. Sin embargo, no se trata de tiempo perdido en absoluto. Si se
hacen adecuadamente, las revisiones del código en realidad ahorran tiempo a
largo plazo.

Estos son tres modos de optimizarlas.

Comparte la carga: En Atlassian, muchos equipos requieren dos revisiones de
cualquier parte del código antes de que se apruebe para la base de código.
¿Suena a demasiado trabajo? En realidad, no es así. Cuando un autor selecciona
revisores, extiende una amplia red por todo el equipo. Cualquier par de
ingenieros puede aportar su opinión. Esto descentraliza el proceso para que
nadie se convierta en un cuello de botella, y garantiza una buena cobertura de
la revisión del código en todo el equipo.

Revisa antes de hacer un merge: Exigir la revisión del código antes de hacer un
merge más adelante garantiza que ninguna parte del código quede sin revisarse.
Esto significa que las decisiones cuestionables de arquitectura realizadas a las
dos de la mañana y un uso inapropiado de un patrón de fábrica por parte de un
becario se detectan antes de que tengan un efecto duradero del que lamentarse en
tu aplicación.

Saca partido de la presión de los compañeros: Cuando los desarrolladores saben
que los va a revisar un compañero, se esfuerzan más para garantizar que se
superan todas las pruebas y que el código está bien diseñado, y así el proceso
de revisión puede ser más fluido. Esa concentración también tiende a conseguir
una programación más fluida y, con el tiempo, más rápida.

No esperes a una revisión del código si se necesita feedback en una fase
temprana del ciclo de desarrollo. Un feedback temprano y frecuente a menudo
implica un código mejor, así que no temas implicar a otras personas en cualquier
momento. Conseguirás que mejore tu trabajo, pero también que tus compañeros de
equipo sean mejores revisores del código. Y así continúa el ciclo de virtudes.

Fuentes
=======

https://www.zendesk.com.mx/blog/make-work-flow-5-steps-scale-support-operations/

https://asana.com/es/resources/how-prioritize-tasks-work

https://asana.com/es/resources/project-coordination-tips

ChatGPT

https://www.atlassian.com/es/agile/software-development/release

https://www.atlassian.com/es/agile/software-development/code-reviews
